@page "/projects"
@using Core.Interfaces.Services
@using Web.Services
@inject TitleService titleService
@inject IProjectService projectService

<h1>Hello, world!</h1>

Welcome to your new app.

<MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="ButtonOnClick" Disabled="@loading">Load Projects</MudButton>
<MudTable Items="@items" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@loading" LoadingProgressColor="Color.Info">
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Description</MudTh>
        <MudTh>Tags</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Nr">@context.Name</MudTd>
        <MudTd DataLabel="Nr">@context.Description</MudTd>
        <MudTd DataLabel="Nr">@string.Join(',',context.Tags)</MudTd>
    </RowTemplate>
</MudTable>

@code {
    private List<Core.Models.Project> items = [];
    private bool loading;

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        titleService.SetTitle("Dashboard");
        return base.OnAfterRenderAsync(firstRender);
    }

    private async Task ButtonOnClick()
    {
        loading = true;
        await Task.Delay(1000);
        items = await projectService.GetProjectsAsync(default);
        loading = false;
    }
}